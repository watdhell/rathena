//===== rAthena Script ======================================= 
//= Warper NPC
//===== Description: ========================================= 
//= Warper NPC script (Pre-Renewal).
//= Fee increase based on player base level.
//= Fee formula: Fee + (Fee * (Base Level / 10)).
//= Warp to Prontera is free of charge.
//============================================================

-	script	Warper	-1,{
function Go; function Disp; function Pick;

.FeeMod = (BaseLevel / 10) + 1;				// Fee modifier
.LastWarpFee = lastwarpz * .FeeMod / 2;		// Last warp fee (In Zeny)
.TownFee = 500;								// Town warp fee (In Zeny)
.FieldFee = 1000;							// Field warp fee (In Zeny)
.DungeonFee = 2000;							// Normal and Guild Dungeon warp fee (In Zeny)
.OthersFee = 500;							// Guild Castle and others warp fee (In Zeny)

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------

menu	"Last Warp " + ((lastwarp$) ? "^1A66FF[" + lastwarp$ + "]^000000 ^777777" + ((lastwarp$ == strcharinfo(3) || lastwarp$ == "prontera") ? "[Free]" : "[" + callfunc("F_InsertComma", .LastWarpFee) + " z]") + "^000000" : "^777777[No Record]^000000"),-,
    	" - Towns ^777777[" + callfunc("F_InsertComma", .TownFee * .FeeMod) + " z]^000000",Towns,
    	" - Fields ^777777[" + callfunc("F_InsertComma", .FieldFee * .FeeMod) + " z]^000000",Fields,
    	" - Dungeons ^777777[" + callfunc("F_InsertComma", .DungeonFee * .FeeMod) + " z]^000000",Dungeons,
    	" - Guild Castles ^777777[" + callfunc("F_InsertComma", .OthersFee * .FeeMod) + " z]^000000",Castles,
    	" - Guild Dungeons ^777777[" + callfunc("F_InsertComma", .DungeonFee * .FeeMod) + " z]^000000",Guild_Dungeons,
    	" - Instances ^777777[" + callfunc("F_InsertComma", .OthersFee * .FeeMod) + " z]^000000",Instances,
    	" - Special Areas ^777777[" + callfunc("F_InsertComma", .OthersFee * .FeeMod) + " z]^000000",Specials;

	if (lastwarp$ == "") {
		message strcharinfo(0), "You haven't warped anywhere yet.";
	} else {
		if (lastwarp$ == strcharinfo(3)) {
			message strcharinfo(0), "You're already in here.";
			end;
		}

		if (Zeny < .LastWarpFee && lastwarp$ != strcharinfo(3)) {
			message strcharinfo(0), "You don't have enough zeny.";
			end;
		} else {
			Zeny -= .LastWarpFee;
		}

		warp lastwarp$, lastwarpx, lastwarpy;
	end;
	}

function Go {
	if (getarg(0) == strcharinfo(3)) {
		message strcharinfo(0), "You're already in here.";
		end;
	}

	if (Zeny < .WarpFee * .FeeMod && getarg(0) != "prontera" && getarg(0) != strcharinfo(3)) {
		message strcharinfo(0), "You don't have enough zeny.";
		end;
	}

	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);

	if (getarg(0) == "prontera") {
		set lastwarpz, 0;
	} else if (getarg(0) != strcharinfo(3)) {
		set lastwarpz, .WarpFee;
		Zeny -= .WarpFee * .FeeMod;
	}

	warp getarg(0), getarg(1,0), getarg(2,0);
	end;
}

function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$, "";
		for (.@i = getarg(1); .@i <= getarg(2); .@i++)
			set @menu$, @menu$ + getarg(0) + " " + .@i + ":";
	}
	return;
}

function Pick {
	set .@warp_block, @warp_block;
	set @warp_block, 0;
	if ((@f && .OnlyFirstFld) || (@d && .OnlyFirstDun)) {
		set .@select,1;
		if(.@warp_block){
			while(.@warp_block & (1<<.@select)){
				.@select += 1;
			}
		}
	}else{
		set .@select, select(@menu$);
	}
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select - getarg(1,0);
		set .@map$, getarg(0) + ((.@i < 10) ? "0" : "") + .@i;
	}
	set .@x, @c[.@i * 2];
	set .@y, @c[.@i * 2 + 1];
	deletearray @c[0], getarraysize(@c);
	@f = false;
	@d = false;
	Go(.@map$, .@x, .@y);
}



// --------------------------------------------------
	Towns:
// --------------------------------------------------
.WarpFee = .TownFee;

setarray .@TownMap$[1],
		"Prontera","prontera",
		"Alberta","alberta",
		"Aldebaran","aldebaran",
		"Amatsu","amatsu",
		"Ayothaya","ayothaya",
		"Brasilis","brasilis",
		"Comodo","comodo",
		"Einbech","einbech",
		"Einbroch","einbroch",
		"Geffen","geffen",
		"Gonryun","gonryun",
		"Hugel","hugel",
		"Izlude","izlude",
		"Jawaii","jawaii",
		"Lighthalzen","lighthalzen",
		"Luoyang","louyang",
		"Lutie","xmas",
		"Manuk","manuk",
		"Midgarts Expedition Camp","mid_camp",
		"Morocc","morocc",
		"Moscovia","moscovia",
		"Niflheim","niflheim",
		"Payon","payon",
		"Rachel","rachel",
		"Splendide","splendide",
		"Umbala","umbala",
		"Veins","veins",
		"Yuno","yuno";

setarray .@MapsXY[1],
		156,188,
		179,136,
		135,117,
		197,134,
		208,197,
		196,181,
		204,134,
		167,131,
		172,312,
		119,98,
		160,173,
		95,151,
		128,110,
		216,159,
		159,90,
		218,94,
		148,117,
		275,140,
		213,225,
		163,93,
		236,194,
		202,174,
		165,92,
		128,139,
		203,149,
		89,151,
		217,128,
		157,176;

.InfoText$ = " ^FF3355(Current Map)^000000 ^777777[Free]^000000";

for (.@i = 1; .@i < getarraysize(.@TownMap$); set .@i, .@i + 2) {
	set .@menu$, .@menu$ + .@TownMap$[.@i] + (("Prontera" == .@TownMap$[.@i]) ? " ^FF3355(Main Town)^000000 ^777777[Free]^000000" : ((.@TownMap$[.@i + 1] == strcharinfo(3)) ? .InfoText$ : "")) + ":";
}
set .@menu$, .@menu$;
set .@i, select(.@menu$) * 2;

Go(.@TownMap$[.@i], .@MapsXY[.@i - 1], .@MapsXY[.@i]);



// --------------------------------------------------
	Fields:
// --------------------------------------------------
.WarpFee = .FieldFee;

@f = true;
menu	"Amatsu Fields",F1, "Ayothaya Fields",F2, "Brasilis Fields",F3,
		"Comodo Fields",F4, "Einbroch Fields",F5, "Geffen Fields",F6,
		"Gonryun Fields",F7, "Hugel Fields",F8, "Lighthalzen Fields",F9,
		"Luoyang Field",F10, "Lutie Field",F11, "Manuk Fields",F12,
		"Mjolnir Fields",F13, "Moscovia Fields",F14, "Niflheim Fields",F15,
		"Payon Forests",F16, "Prontera Fields",F17,	"Rachel Fields",F18,
		"Sograt Deserts",F19, "Splendide Fields",F20, "Umbala Fields",F21,
		"Veins Fields",F22, "Yuno Fields",F23;

F1: setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
F3: setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F4: setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F5: setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F6: setarray @c[0],46,199,213,204,195,212,257,192,188,171,166,263,248,158,195,191,186,183,221,117,178,218,136,328,240,181,235,235,211,185;
	Disp("Geffen Field",0,14); Pick("gef_fild",1);
F7: setarray @c[2],220,227;
	Disp("Gonryun Field",1,1); Pick("gon_fild"); 
F8: setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	Disp("Hugel Field",1,7); Pick("hu_fild");
F9: setarray @c[2],240,179,185,235,240,226;
	Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F10: setarray @c[2],229,187;
	Disp("Luoyang Field",1,1); Pick("lou_fild");
F11: setarray @c[2],115,145;
	Disp("Lutie Field",1,1); Pick("xmas_fild");
F12: setarray @c[2],35,236,35,262,84,365;
	Disp("Manuk Field",1,3); Pick("man_fild");
F13: setarray @c[2],204,120,175,193,208,213,179,180,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	Disp("Mjolnir Field",1,12); Pick("mjolnir_");
F14: setarray @c[2],82,104,131,147;
	Disp("Moscovia Field",1,2); Pick("mosk_fild");
F15: setarray @c[2],215,229,167,234;
	Disp("Niflheim Field",1,2); Pick("nif_fild");
F16: setarray @c[2],158,206,151,219,205,148,186,247,134,204,193,235,200,177,137,189,201,224,160,205,194,150;
	Disp("Payon Forest",1,11); Pick("pay_fild");
F17: setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	Disp("Prontera Field",0,11); Pick("prt_fild",1);
F18: setarray @c[2],192,162,235,166,202,206,202,208,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	Disp("Rachel Field",1,13); Pick("ra_fild");
F19: setarray @c[2],219,205,177,206,194,182,192,190,200,213,190,201,224,170,197,202,200,219,207,172,198,216,156,187,185,263,201,188,195,177,206,228,208,238,209,223,107,98,207,202,31,195,38,195;
	Disp("Sograt Desert",1,22); Pick("moc_fild");
F20: setarray @c[2],175,186,236,184,188,204;
	Disp("Splendide Field",1,3); Pick("spl_fild");
F21: setarray @c[2],217,206,223,221,237,215,202,197;
	Disp("Umbala Field",1,4); Pick("um_fild");
F22: setarray @c[2],186,175,196,370,222,45,51,250,202,324,150,223,149,307;
	Disp("Veins Field",1,7); Pick("ve_fild");
F23: setarray @c[2],189,224,192,207,221,157,226,199,223,177,187,232,231,174,196,203,183,214,200,124,195,226,210,304;
	Disp("Yuno Field",1,12); Pick("yuno_fild");



// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
.WarpFee = .DungeonFee;

@d = true;
menu	"Abyss Lakes",D1, "Amatsu Dungeon",D2, "Anthell",D3,
		"Ayothaya Dungeon",D4, "Beach Dungeon",D5, "Bio Labs",D6,
		"Brasilis Dungeon",D7, "Byalan Dungeon",D8, "Clock Tower",D9,
		"Coal Mines",D10, "Culvert",D11, "Cursed Abbey",D12,
		"Einbroch Dungeon",D13, "Gefenia",D14, "Geffen Dungeon",D15,
		"Glast Heim",D16, "Gonryun Dungeon",D17, "Hidden Dungeon",D18,
		"Ice Dungeon",D19, "Juperos",D20, "Kiel Dungeon",D21,
		"Luoyang Dungeon",D22, "Magma Dungeon",D23, "Moscovia Dungeon",D24,
		"Nidhogg's Dungeon",D25, "Odin Temple",D26, "Orc Dungeon",D27,
		"Payon Dungeon",D28, "Pyramids",D29, "Rachel Sanctuary",D30,
		"Sphinx",D31, "Sunken Ship",D32, "Thanatos Tower",D33,
		"Thor Volcano",D34, "Toy Factory",D35, "Turtle Dungeon",D36,
		"Umbala Dungeon",D37;

D1: setarray @c[2],261,272,275,270,116,27;
	Disp("Abyss Lakes",1,3); Pick("abyss_");
D2: setarray @c[2],228,11,34,41,119,14;
	Disp("Amatsu Dungeon",1,3); Pick("ama_dun");
D3: setarray @c[2],35,262,168,170;
	Disp("Anthell",1,2); Pick("anthell");
D4: setarray @c[2],275,19,24,26;
	Disp("Ancient Shrine Maze:Inside Ancient Shrine"); Pick("ayo_dun");
D5: setarray @c[2],266,67,154,25,23,260;
	Disp("Beach Dungeon",1,3); Pick("","beach_dun","beach_dun2","beach_dun3");
D6: setarray @c[2],150,288,150,18,140,134;
	Disp("Bio Lab 1:Bio Lab 2:Bio Lab 3"); Pick("","lhz_dun01","lhz_dun02","lhz_dun03");
D7: setarray @c[2],87,47,262,262;
	Disp("Brasilis Dungeon",1,2); Pick("bra_dun");
D8: setarray @c[0],168,168,253,252,236,204,32,63,26,27;
	Disp("Byalan Dungeon",1,5); Pick("iz_dun",1);
D9: setarray @c[2],199,159,268,26,65,147,56,155,297,25,127,169,277,178,268,74;
	Disp("Clock Tower 1:Clock Tower 2:Clock Tower 3:Clock Tower 4:Basement 1:Basement 2:Basement 3:Basement 4");
	Pick("","c_tower1","c_tower2","c_tower3","c_tower4","alde_dun01","alde_dun02","alde_dun03","alde_dun04");
D10: setarray @c[2],52,17,381,343,302,262;
	Disp("Coal Mines",1,3); Pick("mjo_dun");
D11: setarray @c[2],131,247,19,19,180,169,100,92;
	Disp("Culvert",1,4); Pick("","prt_sewb1","prt_sewb2","prt_sewb3","prt_sewb4");
D12: setarray @c[2],51,14,150,11,120,10;
	Disp("Cursed Abbey",1,3); Pick("abbey");
D13: setarray @c[2],22,14,292,290;
	Disp("Einbroch Dungeon",1,2); Pick("ein_dun");
D14: setarray @c[2],40,103,203,34,266,168,130,272;
	Disp("Gefenia",1,4); Pick("gefenia",0);
D15: setarray @c[0],104,99,115,236,106,132,203,200;
	Disp("Geffen Dungeon",1,4); Pick("gef_dun",1);
D16: setarray @c[2],370,304,200,350,199,29,104,25,150,15,157,287,147,15,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14;
	Disp("Entrance:Inside:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Churchyard:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	Pick("","glast_01","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1");
D17: setarray @c[2],153,53,28,113,68,16;
	Disp("Gonryun Dungeon",1,3); Pick("gon_dun");
D18: setarray @c[2],99,31,93,20,182,88;
	Disp("Hidden Dungeon",1,3); Pick("prt_maze");
D19: setarray @c[2],157,14,151,155,149,22,33,158;
	Disp("Ice Dungeon",1,4); Pick("ice_dun");
D20: setarray @c[2],140,51,53,247,37,63,150,285;
	Disp("Entrance:Juperos 1:Juperos 2:Core");
	Pick("","jupe_cave","juperos_01","juperos_02","jupe_core");
D21: setarray @c[2],28,226,41,198;
	Disp("Kiel Dungeon",1,2); Pick("kh_dun");
D22: setarray @c[2],218,196,282,20,165,38;
	Disp("The Royal Tomb:Inside the Royal Tomb:Suei Long Gon"); Pick("lou_dun");
D23: setarray @c[2],126,68,47,30;
	Disp("Magma Dungeon",1,2); Pick("mag_dun");
D24: setarray @c[2],189,48,165,30,32,135;
	Disp("Moscovia Dungeon",1,3); Pick("mosk_dun");
D25: setarray @c[2],61,239,60,271;
	Disp("Nidhogg's Dungeon",1,2); Pick("nyd_dun");
D26: setarray @c[2],298,167,224,149,266,280;
	Disp("Odin Temple 1:Odin Temple 2:Odin Temple 3"); Pick("","odin_tem01","odin_tem02","odin_tem03");
D27: setarray @c[2],32,170,21,185;
	Disp("Orc Dungeon",1,2); Pick("orcsdun");
D28: setarray @c[0],21,183,19,33,19,63,155,159,201,204;
	Disp("Payon Dungeon",1,5); Pick("pay_dun",1);
D29: setarray @c[2],192,9,10,192,100,92,181,11,94,96,192,8;
	Disp("Pyramids 1:Pyramids 2:Pyramids 3:Pyramids 4:Basement 1:Basement 2");
	Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd04","moc_pryd05","moc_pryd06");
D30: setarray @c[2],140,19,32,21,8,149,204,218,150,9;
	Disp("Rachel Sanctuary",1,5); Pick("ra_san");
D31: setarray @c[2],288,9,149,81,210,54,10,222,100,99;
	Disp("Sphinx",1,5); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4","in_sphinx5");
D32: setarray @c[2],69,24,102,27;
	Disp("Sunken Ship",1,2); Pick("treasure");
D33: setarray @c[2],150,39,150,136,220,158,59,143,62,11,89,221,35,166,93,148,29,107,159,138,19,20,130,52;
	Disp("Thanatos Tower",1,12); Pick("tha_t");
D34: setarray @c[2],21,228,75,205,34,272;
	Disp("Thor Volcano",1,3); Pick("thor_v");
D35: setarray @c[2],205,15,129,133;
	Disp("Toy Factory",1,2); Pick("xmas_dun");
D36: setarray @c[2],154,49,148,261,132,189,100,192;
	Disp("Entrance:Turtle Dungeon 1:Turtle Dungeon 2:Turtle Dungeon 3"); Pick("tur_dun");
D37: setarray @c[2],42,31,48,30,204,78;
	Disp("Carpenter's Shop in the Tree:Passage to a Foreign World:Hvergermil's Fountain");
	Pick("","um_dun01","um_dun02","yggdrasil01");



// --------------------------------------------------
	Castles:
// --------------------------------------------------
.WarpFee = .OthersFee;

menu	"[FE] Aldebaran Castles [Luina]",C1, "[FE] Geffen Castles [Britoniah]",C2, "[FE] Payon Castles [Greenwood]",C3,
		"[FE] Prontera Castles [Valkyrie]",C4, "[SE] Arunafeltz Castles [Valfreyja]",C5, "[SE] Schwarzwald Castles [Nidhoggur]",C6;

C1: setarray @c[2],48,83,95,249,142,85,239,242,264,90;
	Disp("Neuschwanstein:Hohenschwangau:Nuenberg:Wuerzburg:Rothenburg");
	Pick("","alde_gld","alde_gld","alde_gld","alde_gld","alde_gld");
C2: setarray @c[2],214,75,308,240,143,240,193,278,305,87;
	Disp("Repherion:Eeyolbriggar:Yesnelph:Bergel:Mersetzdeitz");
	Pick("","gef_fild13","gef_fild13","gef_fild13","gef_fild13","gef_fild13");
C3: setarray @c[2],121,233,295,116,317,293,140,160,204,266;
	Disp("Bright Arbor:Scarlet Palace:Holy Shadow:Sacred Altar:Bamboo Grove Hill");
	Pick("","pay_gld","pay_gld","pay_gld","pay_gld","pay_gld");
C4: setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("Kriemhild:Swanhild:Fadhgridh:Skoegul:Gondul");
	Pick("","prt_gld","prt_gld","prt_gld","prt_gld","prt_gld");
C5: setarray @c[2],158,272,83,47,68,155,299,345,292,107;
	Disp("Mardol:Cyr:Horn:Gefn:Banadis");
	Pick("","aru_gld","aru_gld","aru_gld","aru_gld","aru_gld");
C6: setarray @c[2],293,100,288,252,97,196,137,90,71,315;
	Disp("Himinn:Andlangr:Viblainn:Hljod:Skidbladnir");
	Pick("","sch_gld","sch_gld","sch_gld","sch_gld","sch_gld");



// --------------------------------------------------
	Guild_Dungeons:
// --------------------------------------------------
.WarpFee = .DungeonFee;

menu	"Aldebaran Guild Dungeon [Luina]",G1, "Geffen Guild Dungeon [Britoniah]",G2,
		"Payon Guild Dungeon [Baldur]",G3, "Prontera Guild Dungeon [Valkyrie]",G4,
		"Arunafeltz Guild Dungeon",G5, "Schwarzwald Guild Dungeon",G6;

G1: Go("gld_dun02",25,160);
G2: Go("gld_dun04",110,26);
G3: Go("gld_dun01",119,22);
G4: Go("gld_dun03",42,37);
G5: Go("arug_dun01",199,195);
G6: Go("schg_dun01",200,124);



// --------------------------------------------------
	Instances:
// --------------------------------------------------
.WarpFee = .OthersFee;

menu	"Endless Tower",I1, "Nidhoggur's Nest",I2, "Orc's Memory",I3, "Sealed Shrine",I4;

I1: Go("e_tower",72,112);
I2: Go("nyd_dun02",95,193);
I3: Go("gef_fild10",240,198);
I4: Go("monk_test",306,143);



// --------------------------------------------------
	Specials:
// --------------------------------------------------
.WarpFee = .OthersFee;

menu	"Battlegrounds",S1, "Casino",S2, "Gonryun Arena",S3,
		"Izlude Arena",S4, "Monster Race Arena",S5, "Turbo Track",S6;

S1: Go("bat_room",154,150);
S2: Go("cmd_in02",179,129);
S3: Go("gon_test",48,10);
S4: Go("arena_room",100,88);
S5: Go("p_track01",62,41);
S6: Go("turbo_room",99,114);



OnNaviGenerate:

	// for non-prontera warpers, just give it warp to prontera
	// this cuts down the number of links considerably
	if (strnpcinfo(4) != "prontera") {
		naviregisterwarp("Warper > Prontera", "prontera", 156, 188);
		end;
	}



	// TOWNS
	naviregisterwarp("Warper > Prontera", "prontera", 156, 188);
	naviregisterwarp("Warper > Alberta", "alberta", 179, 136);
	naviregisterwarp("Warper > Al De Baran", "aldebaran", 135, 117);
	naviregisterwarp("Warper > Amatsu", "amatsu", 197, 134);
	naviregisterwarp("Warper > Ayothaya", "ayothaya", 208, 197);
	naviregisterwarp("Warper > Brasilis", "brasilis", 196, 181);
	naviregisterwarp("Warper > Comodo", "comodo", 204, 134);
	naviregisterwarp("Warper > Einbech", "einbech",167,131);
	naviregisterwarp("Warper > Einbroch", "einbroch",172,312);
	naviregisterwarp("Warper > Geffen", "geffen",119,98);
	naviregisterwarp("Warper > Hugel", "hugel",160,173);
	naviregisterwarp("Warper > Izlude", "izlude",95,151);
	naviregisterwarp("Warper > Jawaii", "jawaii",128,110);
	naviregisterwarp("Warper > Gonryun", "gonryun",216,159);
	naviregisterwarp("Warper > Lighthalzen", "lighthalzen",159,90);
	naviregisterwarp("Warper > Luoyang", "louyang",218,94);
	naviregisterwarp("Warper > Lutie", "xmas",148,117);
	naviregisterwarp("Warper > Manuk", "manuk",275,140);
	naviregisterwarp("Warper > Midgarts Expedition Camp", "mid_camp",213,225);
	naviregisterwarp("Warper > Morocc", "morocc",163,93);
	naviregisterwarp("Warper > Moscovia", "moscovia",236,194);
	naviregisterwarp("Warper > Niflheim", "niflheim",202,174);
	naviregisterwarp("Warper > Payon", "payon",165,92);
	naviregisterwarp("Warper > Rachel", "rachel",128,139);
	naviregisterwarp("Warper > Splendide", "splendide",203,149);
	naviregisterwarp("Warper > Umbala", "umbala",89,151);
	naviregisterwarp("Warper > Veins", "veins",217,128);
	naviregisterwarp("Warper > Juno", "yuno",157,176);



	// FIELDS
	naviregisterwarp("Warper > Amatsu Field", "ama_fild01", 190, 197);

	naviregisterwarp("Warper > Ayothaya Field", "ayo_fild01", 173, 134);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Ayothaya Field", "ayo_fild02", 212, 150);
	}

	naviregisterwarp("Warper > Brasilis Field", "bra_fild01", 74, 32);

	naviregisterwarp("Warper > Comodo Field", "cmd_fild01", 180, 178);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Comodo Field", "cmd_fild02", 231, 160);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild03", 191, 172);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild04", 228, 194);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild05", 224, 203);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild06", 190, 223);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild07", 234, 177);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild08", 194, 175);
		naviregisterwarp("Warper > Comodo Field", "cmd_fild09", 172, 172);
	}

	naviregisterwarp("Warper > Einbroch Field", "ein_fild01", 142, 225);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Einbroch Field", "ein_fild02", 182, 141);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild03", 187, 228);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild04", 185, 173);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild05", 216, 173);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild06", 195, 148);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild07", 272, 220);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild08", 173, 214);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild09", 207, 174);
		naviregisterwarp("Warper > Einbroch Field", "ein_fild10", 196, 200);
	}

	naviregisterwarp("Warper > Geffen Field 0", "gef_fild00", 46, 199);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Geffen Field 1", "gef_fild01", 213, 204);
		naviregisterwarp("Warper > Geffen Field 2", "gef_fild02", 195, 212);
		naviregisterwarp("Warper > Geffen Field 3", "gef_fild03", 257, 192);
		naviregisterwarp("Warper > Geffen Field 4", "gef_fild04", 188, 171);
		naviregisterwarp("Warper > Geffen Field 5", "gef_fild05", 166, 263);
		naviregisterwarp("Warper > Geffen Field 6", "gef_fild06", 248, 158);
		naviregisterwarp("Warper > Geffen Field 7", "gef_fild07", 195, 191);
		naviregisterwarp("Warper > Geffen Field 8", "gef_fild08", 186, 183);
		naviregisterwarp("Warper > Geffen Field 9", "gef_fild09", 221, 117);
		naviregisterwarp("Warper > Geffen Field 10", "gef_fild10", 178, 218);
		naviregisterwarp("Warper > Geffen Field 11", "gef_fild11", 136, 328);
		naviregisterwarp("Warper > Geffen Field 12", "gef_fild12", 240, 181);
		naviregisterwarp("Warper > Geffen Field 13", "gef_fild13", 235, 235);
		naviregisterwarp("Warper > Geffen Field 14", "gef_fild14", 211, 185);
	}

	naviregisterwarp("Warper > Gonryun Field 1", "gon_fild01", 220, 227);

	naviregisterwarp("Warper > Hugel Field 1", "hu_fild01", 268, 101);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Hugel Field 2", "hu_fild02", 222, 193);
		naviregisterwarp("Warper > Hugel Field 3", "hu_fild03", 232, 185);
		naviregisterwarp("Warper > Hugel Field 4", "hu_fild04", 252, 189);
		naviregisterwarp("Warper > Hugel Field 5", "hu_fild05", 196, 106);
		naviregisterwarp("Warper > Hugel Field 6", "hu_fild06", 216, 220);
		naviregisterwarp("Warper > Hugel Field 7", "hu_fild07", 227, 197);
	}

	naviregisterwarp("Warper > Lighthalzen Field 1", "lhz_fild01", 240, 179);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Lighthalzen Field 2", "lhz_fild02", 185, 235);
		naviregisterwarp("Warper > Lighthalzen Field 3", "lhz_fild03", 240, 226);
	}

	naviregisterwarp("Warper > Luoyang Field 1", "lou_fild01", 229, 187);

	naviregisterwarp("Warper > Lutie Field 1", "xmas_fild01", 115, 145);

	naviregisterwarp("Warper > Manuk Field 1", "man_fild01", 35, 236);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Manuk Field 2", "man_fild02", 35, 262);
		naviregisterwarp("Warper > Manuk Field 3", "man_fild03", 84, 365);
	}

	naviregisterwarp("Warper > Mjolnir Field 1", "mjolnir_01", 204, 120);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Mjolnir Field 2", "mjolnir_02", 175, 193);
		naviregisterwarp("Warper > Mjolnir Field 3", "mjolnir_03", 208, 213);
		naviregisterwarp("Warper > Mjolnir Field 4", "mjolnir_04", 179, 180);
		naviregisterwarp("Warper > Mjolnir Field 5", "mjolnir_05", 181, 240);
		naviregisterwarp("Warper > Mjolnir Field 6", "mjolnir_06", 195, 270);
		naviregisterwarp("Warper > Mjolnir Field 7", "mjolnir_07", 235, 202);
		naviregisterwarp("Warper > Mjolnir Field 8", "mjolnir_08", 188, 215);
		naviregisterwarp("Warper > Mjolnir Field 9", "mjolnir_09", 205, 144);
		naviregisterwarp("Warper > Mjolnir Field 10", "mjolnir_10", 245, 223);
		naviregisterwarp("Warper > Mjolnir Field 11", "mjolnir_11", 180, 206);
		naviregisterwarp("Warper > Mjolnir Field 12", "mjolnir_12", 196, 208);
	}

	naviregisterwarp("Warper > Moscovia Field 1", "mosk_fild01", 82, 104);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Moscovia Field 2", "mosk_fild02", 131, 147);
	}

	naviregisterwarp("Warper > Niflheim Field 1", "nif_fild01", 215, 229);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warer > Niflheim Field 2", "nif_fild02", 167, 234);
	}

	naviregisterwarp("Warper > Payon Forest 1", "pay_fild01", 158, 206);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Payon Forest 2", "pay_fild02", 151, 219);
		naviregisterwarp("Warper > Payon Forest 3", "pay_fild03", 205, 148);
		naviregisterwarp("Warper > Payon Forest 4", "pay_fild04", 186, 247);
		naviregisterwarp("Warper > Payon Forest 5", "pay_fild05", 134, 204);
		naviregisterwarp("Warper > Payon Forest 6", "pay_fild06", 193, 235);
		naviregisterwarp("Warper > Payon Forest 7", "pay_fild07", 200, 177);
		naviregisterwarp("Warper > Payon Forest 8", "pay_fild08", 137, 189);
		naviregisterwarp("Warper > Payon Forest 9", "pay_fild09", 201, 224);
		naviregisterwarp("Warper > Payon Forest 10", "pay_fild10", 160, 205);
		naviregisterwarp("Warper > Payon Forest 11", "pay_fild11", 194, 150);
	}

	naviregisterwarp("Warper > Prontera Field 0", "prt_fild00", 208, 227);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Prontera Field 1", "prt_fild01", 190, 206);
		naviregisterwarp("Warper > Prontera Field 2", "prt_fild02", 240, 206);
		naviregisterwarp("Warper > Prontera Field 3", "prt_fild03", 190, 143);
		naviregisterwarp("Warper > Prontera Field 4", "prt_fild04", 307, 252);
		naviregisterwarp("Warper > Prontera Field 5", "prt_fild05", 239, 213);
		naviregisterwarp("Warper > Prontera Field 6", "prt_fild06", 185, 188);
		naviregisterwarp("Warper > Prontera Field 7", "prt_fild07", 193, 194);
		naviregisterwarp("Warper > Prontera Field 8", "prt_fild08", 187, 218);
		naviregisterwarp("Warper > Prontera Field 9", "prt_fild09", 210, 183);
		naviregisterwarp("Warper > Prontera Field 10", "prt_fild10", 195, 149);
		naviregisterwarp("Warper > Prontera Field 11", "prt_fild11", 198, 164);
	}

	naviregisterwarp("Warper > Rachel Field 1", "ra_fild01", 192, 162);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Rachel Field 2", "ra_fild02", 235, 166);
		naviregisterwarp("Warper > Rachel Field 3", "ra_fild03", 202, 206);
		naviregisterwarp("Warper > Rachel Field 4", "ra_fild04", 202, 208);
		naviregisterwarp("Warper > Rachel Field 5", "ra_fild05", 225, 202);
		naviregisterwarp("Warper > Rachel Field 6", "ra_fild06", 202, 214);
		naviregisterwarp("Warper > Rachel Field 7", "ra_fild07", 263, 196);
		naviregisterwarp("Warper > Rachel Field 8", "ra_fild08", 217, 201);
		naviregisterwarp("Warper > Rachel Field 9", "ra_fild09", 87, 121);
		naviregisterwarp("Warper > Rachel Field 10", "ra_fild10", 277, 181);
		naviregisterwarp("Warper > Rachel Field 11", "ra_fild11", 221, 185);
		naviregisterwarp("Warper > Rachel Field 12", "ra_fild12", 175, 200);
		naviregisterwarp("Warper > Rachel Field 13", "ra_fild13", 174, 197);
	}

	naviregisterwarp("Warper > Sograt Desert 1", "moc_fild01", 219, 205);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Sograt Desert 2", "moc_fild02", 177, 206);
		naviregisterwarp("Warper > Sograt Desert 3", "moc_fild03", 194, 182);
		naviregisterwarp("Warper > Sograt Desert 4", "moc_fild04", 192, 190);
		naviregisterwarp("Warper > Sograt Desert 5", "moc_fild05", 200, 213);
		naviregisterwarp("Warper > Sograt Desert 6", "moc_fild06", 190, 201);
		naviregisterwarp("Warper > Sograt Desert 7", "moc_fild07", 224, 170);
		naviregisterwarp("Warper > Sograt Desert 8", "moc_fild08", 202, 200);
		naviregisterwarp("Warper > Sograt Desert 9", "moc_fild09", 200, 219);
		naviregisterwarp("Warper > Sograt Desert 10", "moc_fild10", 207, 172);
		naviregisterwarp("Warper > Sograt Desert 11", "moc_fild11", 198, 216);
		naviregisterwarp("Warper > Sograt Desert 12", "moc_fild12", 156, 187);
		naviregisterwarp("Warper > Sograt Desert 13", "moc_fild13", 185, 263);
		naviregisterwarp("Warper > Sograt Desert 14", "moc_fild14", 201, 188);
		naviregisterwarp("Warper > Sograt Desert 15", "moc_fild15", 195, 177);
		naviregisterwarp("Warper > Sograt Desert 16", "moc_fild16", 206, 228);
		naviregisterwarp("Warper > Sograt Desert 17", "moc_fild17", 208, 238);
		naviregisterwarp("Warper > Sograt Desert 18", "moc_fild18", 209, 223);
		naviregisterwarp("Warper > Sograt Desert 19", "moc_fild19", 85, 97);
		naviregisterwarp("Warper > Sograt Desert 20", "moc_fild20", 207, 202);
		naviregisterwarp("Warper > Sograt Desert 21", "moc_fild21", 31, 195);
		naviregisterwarp("Warper > Sograt Desert 22", "moc_fild22", 38, 195);
	}

	naviregisterwarp("Warper > Splendide Field 1", "spl_fild01", 175, 186);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Splendide Field 2", "spl_fild02", 236, 184);
		naviregisterwarp("Warper > Splendide Field 3", "spl_fild03", 188, 204);
	}

	naviregisterwarp("Warper > Umbala Field 1", "um_fild01", 217, 206);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Umbala Field 2", "um_fild02", 223, 221);
		naviregisterwarp("Warper > Umbala Field 3", "um_fild03", 237, 215);
		naviregisterwarp("Warper > Umbala Field 4", "um_fild04", 202, 197);
	}

	naviregisterwarp("Warper > Veins Field 1", "ve_fild01", 186, 175);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Veins Field 2", "ve_fild02", 196, 370);
		naviregisterwarp("Warper > Veins Field 3", "ve_fild03", 222, 45);
		naviregisterwarp("Warper > Veins Field 4", "ve_fild04", 51, 250);
		naviregisterwarp("Warper > Veins Field 5", "ve_fild05", 202, 324);
		naviregisterwarp("Warper > Veins Field 6", "ve_fild06", 150, 223);
		naviregisterwarp("Warper > Veins Field 7", "ve_fild07", 149, 307);
	}

	naviregisterwarp("Warper > Juno Field 1", "yuno_fild01", 189, 224);
	if (!.OnlyFirstFld) {
		naviregisterwarp("Warper > Juno Field 2", "yuno_fild02", 192, 207);
		naviregisterwarp("Warper > Juno Field 3", "yuno_fild03", 221, 157);
		naviregisterwarp("Warper > Juno Field 4", "yuno_fild04", 226, 199);
		naviregisterwarp("Warper > Juno Field 5", "yuno_fild05", 223, 177);
		naviregisterwarp("Warper > Juno Field 6", "yuno_fild06", 187, 232);
		naviregisterwarp("Warper > Juno Field 7", "yuno_fild07", 231, 174);
		naviregisterwarp("Warper > Juno Field 8", "yuno_fild08", 196, 203);
		naviregisterwarp("Warper > Juno Field 9", "yuno_fild09", 183, 214);
		naviregisterwarp("Warper > Juno Field 10", "yuno_fild10", 200, 124);
		naviregisterwarp("Warper > Juno Field 11", "yuno_fild11", 195, 226);
		naviregisterwarp("Warper > Juno Field 12", "yuno_fild12", 210, 304);
	}



	// DUNGEONS
	naviregisterwarp("Warper > Abyss Lakes 1", "abyss_01", 261, 272);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Abyss Lakes 2", "abyss_02", 275, 270);
		naviregisterwarp("Warper > Abyss Lakes 3", "abyss_03", 116, 27);
	}
	naviregisterwarp("Warper > Amatsu Dungeon 1", "ama_dun01", 228, 11);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Amatsu Dungeon 2", "ama_dun02", 34, 41);
		naviregisterwarp("Warper > Amatsu Dungeon 3", "ama_dun03", 119, 14);
	}
	
	naviregisterwarp("Warper > Anthell 1", "anthell01", 35, 262);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Anthell 2", "anthell02", 168, 170);
	}

	naviregisterwarp("Warper > Ancient Shrine Maze", "ayo_dun01", 275, 19);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Inside Ancient Shrine", "ayo_dun02", 24, 26);
	}

	naviregisterwarp("Warper > Beach Dungeon 1", "beach_dun", 266, 67);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Beach Dungeon 2", "beach_dun2", 154, 25);
		naviregisterwarp("Warper > Beach Dungeon 3", "beach_dun3", 23, 260);
	}

	naviregisterwarp("Warper > Bio Lab 1", "lhz_dun01", 150, 288);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Bio Lab 2", "lhz_dun02", 150, 18);
		naviregisterwarp("Warper > Bio Lab 3", "lhz_dun03", 140, 134);
	}

	naviregisterwarp("Warper > Byalan Dungeon 1", "iz_dun00", 168, 168);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Byalan Dungeon 2", "iz_dun01", 253, 252);
		naviregisterwarp("Warper > Byalan Dungeon 3", "iz_dun02", 236, 204);
		naviregisterwarp("Warper > Byalan Dungeon 4", "iz_dun03", 32, 63);
		naviregisterwarp("Warper > Byalan Dungeon 5", "iz_dun04", 26, 27);
	}
	naviregisterwarp("Warper > Clock Tower 1", "c_tower1", 199, 159);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Clock Tower 2", "c_tower2", 268, 26);
		naviregisterwarp("Warper > Clock Tower 3", "c_tower3", 65, 147);
		naviregisterwarp("Warper > Clock Tower 4", "c_tower4", 56, 155);
		naviregisterwarp("Warper > Basement 1", "alde_dun01", 297, 25);
		naviregisterwarp("Warper > Basement 2", "alde_dun02", 127, 169);
		naviregisterwarp("Warper > Basement 3", "alde_dun03", 277, 178);
		naviregisterwarp("Warper > Basement 4", "alde_dun04", 268, 74);
	}
	naviregisterwarp("Warper > Coal Mines 1", "mjo_dun01", 52, 17);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Coal Mines 2", "mjo_dun02", 381, 343);
		naviregisterwarp("Warper > Coal Mines 3", "mjo_dun03", 302, 262);
	}
	naviregisterwarp("Warper > Culvert 1", "prt_sewb1", 131, 247);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Culvert 2", "prt_sewb2", 19, 19);
		naviregisterwarp("Warper > Culvert 3", "prt_sewb3", 180, 169);
		naviregisterwarp("Warper > Culvert 4", "prt_sewb4", 100, 92);
	}
	naviregisterwarp("Warper > Cursed Abbey 1", "abbey01", 51, 14);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Cursed Abbey 2", "abbey02", 150, 11);
		naviregisterwarp("Warper > Cursed Abbey 3", "abbey03", 120, 10);
	}
	naviregisterwarp("Warper > Einbroch Dungeon 1", "ein_dun01", 22, 14);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Einbroch Dungeon 2", "ein_dun02", 292, 290);
	}
	naviregisterwarp("Warper > Gefenia 1", "gefenia01", 40, 103);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Gefenia 2", "gefenia02", 203, 34);
		naviregisterwarp("Warper > Gefenia 3", "gefenia03", 266, 168);
		naviregisterwarp("Warper > Gefenia 4", "gefenia04", 130, 272);
	}
	naviregisterwarp("Warper > Geffen Dungeon 1", "gef_dun00", 104, 99);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Geffen Dungeon 2", "gef_dun01", 115, 236);
		naviregisterwarp("Warper > Geffen Dungeon 3", "gef_dun02", 106, 132);
		naviregisterwarp("Warper > Geffen Dungeon 4", "gef_dun03", 203, 200);
	}
	naviregisterwarp("Warper > Entrance", "glast_01", 370, 304);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Entrance", "glast_01", 200, 350);
		naviregisterwarp("Warper > Castle 1", "gl_cas01", 199, 29);
		naviregisterwarp("Warper > Castle 2", "gl_cas02", 104, 25);
		naviregisterwarp("Warper > Chivalry 1", "gl_knt01", 150, 15);
		naviregisterwarp("Warper > Chivalry 2", "gl_knt02", 157, 287);
		naviregisterwarp("Warper > Churchyard", "gl_chyard", 147, 15);
		naviregisterwarp("Warper > Culvert 1", "gl_sew01", 258, 255);
		naviregisterwarp("Warper > Culvert 2", "gl_sew02", 108, 291);
		naviregisterwarp("Warper > Culvert 3", "gl_sew03", 171, 283);
		naviregisterwarp("Warper > Culvert 4", "gl_sew04", 68, 277);
		naviregisterwarp("Warper > St. Abbey", "gl_church", 156, 7);
		naviregisterwarp("Warper > Staircase Dungeon", "gl_step", 12, 7);
		naviregisterwarp("Warper > Underground Cave 1", "gl_dun01", 133, 271);
		naviregisterwarp("Warper > Underground Cave 2", "gl_dun02", 224, 274);
		naviregisterwarp("Warper > Underground Prison 1", "gl_prison", 14, 70);
		naviregisterwarp("Warper > Underground Prison 2", "gl_prison1", 150, 14);
	}
	naviregisterwarp("Warper > Gonryun Dungeon 1", "gon_dun01", 153, 53);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Gonryun Dungeon 2", "gon_dun02", 28, 113);
		naviregisterwarp("Warper > Gonryun Dungeon 3", "gon_dun03", 68, 16);
	}
	naviregisterwarp("Warper > Hidden Dungeon 1", "prt_maze01", 176, 7);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Hidden Dungeon 2", "prt_maze02", 93, 20);
		naviregisterwarp("Warper > Hidden Dungeon 3", "prt_maze03", 23, 8);
	}
	naviregisterwarp("Warper > Ice Dungeon 1", "ice_dun01", 157, 14);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Ice Dungeon 2", "ice_dun02", 151, 155);
		naviregisterwarp("Warper > Ice Dungeon 3", "ice_dun03", 149, 22);
		naviregisterwarp("Warper > Ice Dungeon 4", "ice_dun04", 33, 158);
	}
	naviregisterwarp("Warper > Entrance", "jupe_cave", 140, 51);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Juperos 1", "juperos_01", 53, 247);
		naviregisterwarp("Warper > Juperos 2", "juperos_02", 37, 63);
		naviregisterwarp("Warper > Core", "jupe_core", 150, 285);
	}
	naviregisterwarp("Warper > Kiel Dungeon 1", "kh_dun01", 28, 226);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Kiel Dungeon 2", "kh_dun02", 41, 198);
	}
	naviregisterwarp("Warper > The Royal Tomb", "lou_dun01", 218, 196);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Inside the Royal Tomb", "lou_dun02", 282, 20);
		naviregisterwarp("Warper > Suei Long Gon", "lou_dun03", 165, 38);
	}
	naviregisterwarp("Warper > Magma Dungeon 1", "mag_dun01", 126, 68);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Magma Dungeon 2", "mag_dun02", 47, 30);
	}
	naviregisterwarp("Warper > Moscovia Dungeon 1", "mosk_dun01", 189, 48);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Moscovia Dungeon 2", "mosk_dun02", 165, 30);
		naviregisterwarp("Warper > Moscovia Dungeon 3", "mosk_dun03", 32, 135);
	}
	naviregisterwarp("Warper > Nidhogg's Dungeon 1", "nyd_dun01", 61, 239);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Nidhogg's Dungeon 2", "nyd_dun02", 60, 271);
	}
	naviregisterwarp("Warper > Odin Temple 1", "odin_tem01", 298, 167);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Odin Temple 2", "odin_tem02", 224, 149);
		naviregisterwarp("Warper > Odin Temple 3", "odin_tem03", 266, 280);
	}
	naviregisterwarp("Warper > Orc Dungeon 1", "orcsdun01", 32, 170);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Orc Dungeon 2", "orcsdun02", 21, 185);
	}
	naviregisterwarp("Warper > Payon Dungeon 1", "pay_dun00", 21, 183);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Payon Dungeon 2", "pay_dun01", 19, 33);
		naviregisterwarp("Warper > Payon Dungeon 3", "pay_dun02", 19, 63);
		naviregisterwarp("Warper > Payon Dungeon 4", "pay_dun03", 155, 159);
		naviregisterwarp("Warper > Payon Dungeon 5", "pay_dun04", 201, 204);
	}
	naviregisterwarp("Warper > Pyramids 1", "moc_pryd01", 192, 9);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Pyramids 2", "moc_pryd02", 10, 192);
		naviregisterwarp("Warper > Pyramids 3", "moc_pryd03", 100, 92);
		naviregisterwarp("Warper > Pyramids 4", "moc_pryd04", 181, 11);
		naviregisterwarp("Warper > Basement 1", "moc_pryd05", 94, 96);
		naviregisterwarp("Warper > Basement 2", "moc_pryd06", 192, 8);
	}
	naviregisterwarp("Warper > Rachel Sanctuary 1", "ra_san01", 140, 11);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Rachel Sanctuary 2", "ra_san02", 32, 21);
		naviregisterwarp("Warper > Rachel Sanctuary 3", "ra_san03", 8, 149);
		naviregisterwarp("Warper > Rachel Sanctuary 4", "ra_san04", 204, 218);
		naviregisterwarp("Warper > Rachel Sanctuary 5", "ra_san05", 150, 9);
	}
	naviregisterwarp("Warper > Sphinx 1", "in_sphinx1", 288, 9);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Sphinx 2", "in_sphinx2", 149, 81);
		naviregisterwarp("Warper > Sphinx 3", "in_sphinx3", 210, 54);
		naviregisterwarp("Warper > Sphinx 4", "in_sphinx4", 10, 222);
		naviregisterwarp("Warper > Sphinx 5", "in_sphinx5", 100, 99);
	}
	naviregisterwarp("Warper > Sunken Ship 1", "treasure01", 69, 24);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Sunken Ship 2", "treasure02", 102, 27);
	}
	naviregisterwarp("Warper > Thanatos Tower 1", "tha_t01", 150, 39);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Thanatos Tower 2", "tha_t02", 150, 136);
		naviregisterwarp("Warper > Thanatos Tower 3", "tha_t03", 220, 158);
		naviregisterwarp("Warper > Thanatos Tower 4", "tha_t04", 59, 143);
		naviregisterwarp("Warper > Thanatos Tower 5", "tha_t05", 62, 11);
		naviregisterwarp("Warper > Thanatos Tower 6", "tha_t06", 89, 221);
		naviregisterwarp("Warper > Thanatos Tower 7", "tha_t07", 35, 166);
		naviregisterwarp("Warper > Thanatos Tower 8", "tha_t08", 93, 148);
		naviregisterwarp("Warper > Thanatos Tower 9", "tha_t09", 29, 107);
		naviregisterwarp("Warper > Thanatos Tower 10", "tha_t10", 159, 138);
		naviregisterwarp("Warper > Thanatos Tower 11", "tha_t11", 19, 20);
		naviregisterwarp("Warper > Thanatos Tower 12", "tha_t12", 130, 52);
	}
	naviregisterwarp("Warper > Thor Volcano 1", "thor_v01", 21, 228);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Thor Volcano 2", "thor_v02", 75, 205);
		naviregisterwarp("Warper > Thor Volcano 3", "thor_v03", 34, 272);
	}
	naviregisterwarp("Warper > Toy Factory 1", "xmas_dun01", 205, 15);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Toy Factory 2", "xmas_dun02", 129, 133);
	}
	naviregisterwarp("Warper > Entrance", "tur_dun01", 154, 49);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Turtle Dungeon 1", "tur_dun02", 148, 261);
		naviregisterwarp("Warper > Turtle Dungeon 2", "tur_dun03", 132, 189);
		naviregisterwarp("Warper > Turtle Dungeon 3", "tur_dun04", 100, 192);
	}
	naviregisterwarp("Warper > Carpenter's Shop in the Tree", "um_dun01", 42, 31);
	if (!.OnlyFirstDun) {
		naviregisterwarp("Warper > Passage to a Foreign World", "um_dun02", 48, 30);
		naviregisterwarp("Warper > Hvergermil's Fountain", "yggdrasil01", 204, 78);
	}

	// CASTLES
	naviregisterwarp("Warper > Neuschwanstein", "alde_gld", 48, 83);
	naviregisterwarp("Warper > Hohenschwangau", "alde_gld", 95, 249);
	naviregisterwarp("Warper > Nuenberg", "alde_gld", 142, 85);
	naviregisterwarp("Warper > Wuerzburg", "alde_gld", 239, 242);
	naviregisterwarp("Warper > Rothenburg", "alde_gld", 264, 90);

	naviregisterwarp("Warper > Repherion", "gef_fild13", 214, 75);
	naviregisterwarp("Warper > Eeyolbriggar", "gef_fild13", 308, 240);
	naviregisterwarp("Warper > Yesnelph", "gef_fild13", 143, 240);
	naviregisterwarp("Warper > Bergel", "gef_fild13", 193, 278);
	naviregisterwarp("Warper > Mersetzdeitz", "gef_fild13", 305, 87);

	naviregisterwarp("Warper > Bright Arbor", "pay_gld", 121, 233);
	naviregisterwarp("Warper > Scarlet Palace", "pay_gld", 295, 116);
	naviregisterwarp("Warper > Holy Shadow", "pay_gld", 317, 293);
	naviregisterwarp("Warper > Sacred Altar", "pay_gld", 140, 160);
	naviregisterwarp("Warper > Bamboo Grove Hill", "pay_gld", 204, 266);

	naviregisterwarp("Warper > Kriemhild", "prt_gld", 134, 65);
	naviregisterwarp("Warper > Swanhild", "prt_gld", 240, 128);
	naviregisterwarp("Warper > Fadhgridh", "prt_gld", 153, 137);
	naviregisterwarp("Warper > Skoegul", "prt_gld", 111, 240);
	naviregisterwarp("Warper > Gondul", "prt_gld", 208, 240);

	naviregisterwarp("Warper > Mardol", "aru_gld", 158, 272);
	naviregisterwarp("Warper > Cyr", "aru_gld", 83, 47);
	naviregisterwarp("Warper > Horn", "aru_gld", 68, 155);
	naviregisterwarp("Warper > Gefn", "aru_gld", 299, 345);
	naviregisterwarp("Warper > Banadis", "aru_gld", 292, 107);

	naviregisterwarp("Warper > Himinn", "sch_gld", 293, 100);
	naviregisterwarp("Warper > Andlangr", "sch_gld", 288, 252);
	naviregisterwarp("Warper > Viblainn", "sch_gld", 97, 196);
	naviregisterwarp("Warper > Hljod", "sch_gld", 137, 90);
	naviregisterwarp("Warper > Skidbladnir", "sch_gld", 71, 315);

	// GUILD DUNGEONS
	naviregisterwarp("Warper > Baldur F1", "gld_dun01", 119, 22);
	naviregisterwarp("Warper > Luina F1", "gld_dun02", 25, 160);
	naviregisterwarp("Warper > Valkyrie F1", "gld_dun03", 42, 37);
	naviregisterwarp("Warper > Britoniah F1", "gld_dun04", 110, 26);
	naviregisterwarp("Warper > Arunafeltz", "arug_dun01", 199, 195);
	naviregisterwarp("Warper > Schwarzwald", "schg_dun01", 200,124);
	end;

	// INSTANCES
	naviregisterwarp("Warper > Endless Tower", "e_tower", 72, 112);
	naviregisterwarp("Warper > Nidhoggur's Nest", "nyd_dun02", 95, 193);
	naviregisterwarp("Warper > Orc's Memory", "gef_fild10", 240, 198);
	naviregisterwarp("Warper > Sealed Shrine", "monk_test", 306, 143);

	// SPECIAL
	naviregisterwarp("Warper > Battlegrounds", "bat_room", 154, 150);
	naviregisterwarp("Warper > Casino", "cmd_in02", 179, 129);
	naviregisterwarp("Warper > Gonryun Arena", "gon_test", 48, 10);
	naviregisterwarp("Warper > Izlude Arena", "arena_room", 100, 88);
	naviregisterwarp("Warper > Monster Race Arena", "p_track01", 62, 41);
	naviregisterwarp("Warper > Turbo Track", "turbo_room", 99, 114);



OnInit:
	.OnlyFirstFld = false;	//	true will teleport to the first level of the Fields  Default is false.
	.OnlyFirstDun = false;	//	true will teleport to the first level of the Dungeons  Default is false.
}



//============================================================
// Duplicates
//============================================================
alberta,179,140,5	duplicate(Warper)	Warper#alb	10370
aldebaran,135,121,5	duplicate(Warper)	Warper#alde	10370
amatsu,197,138,5	duplicate(Warper)	Warper#ama	10370
ayothaya,208,201,5	duplicate(Warper)	Warper#ayo	10370
brasilis,196,185,5	duplicate(Warper)	Warper#bra	10370
comodo,204,138,5	duplicate(Warper)	Warper#com	10370
einbech,167,135,5	duplicate(Warper)	Warper#einbe	10370
einbroch,172,316,5	duplicate(Warper)	Warper#einbr	10370
geffen,119,102,5	duplicate(Warper)	Warper#gef	10370
gonryun,160,177,5	duplicate(Warper)	Warper#gon	10370
hugel,95,155,5	duplicate(Warper)	Warper#hug	10370
izlude,128,114,5	duplicate(Warper)	Warper#izl	10370
jawaii,216,163,5	duplicate(Warper)	Warper#jaw	10370
lighthalzen,159,94,5	duplicate(Warper)	Warper#lhz	10370
louyang,218,98,5	duplicate(Warper)	Warper#lou	10370
manuk,275,144,5	duplicate(Warper)	Warper#man	10370
mid_camp,213,229,5	duplicate(Warper)	Warper#mid	10370
morocc,163,97,5	duplicate(Warper)	Warper#mor	10370
moscovia,236,198,5	duplicate(Warper)	Warper#mos	10370
payon,165,96,5	duplicate(Warper)	Warper#pay	10370
prontera,163,196,4	duplicate(Warper)	Warper#prt	10370
rachel,128,143,5	duplicate(Warper)	Warper#rac	10370
splendide,203,153,5	duplicate(Warper)	Warper#spl	10370
umbala,89,155,5	duplicate(Warper)	Warper#umb	10370
veins,217,132,5	duplicate(Warper)	Warper#ve	10370
xmas,148,121,5	duplicate(Warper)	Warper#xmas	10370
yuno,157,180,5	duplicate(Warper)	Warper#yuno	10370